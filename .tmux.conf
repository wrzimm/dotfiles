# ` is an interesting key for a prefix
# set-option -g prefix `
set-option -g prefix C-a

unbind-key C-b
bind-key Space next-window
bind-key C-Space next-layout
bind-key a send-prefix
bind-key C-a last-pane

# we might need ` at some point, allow switching
# we can also send the prefix char with `-a
bind-key F11 set-option -g prefix C-a


## Resizing Panes
bind -r H resize-pane -L 5       # Resize to Pane Left
bind -r J resize-pane -D 5       # Resize to Pane Down
bind -r K resize-pane -U 5       # Resize to Pane Up
bind -r L resize-pane -R 5       # Resize to Pane Right


## Spliting Windows
unbind %
bind | split-window -h       # Vertical  
bind \ split-window -h       # Vertical  
bind - split-window -v       # Horizontal  

## Reload this file
bind R source-file ~/.tmux.conf \; display-message "Config reloaded!"

## Allow 0.5 sec for repeat commands
set -g repeat-time 500

## Colors

# status bar
set -g status-bg blue   
set -g status-fg white 
set -g status-left-length 40
set -g status-right-length 80
set -g status-left "#H: [#S] "

# active pane
set -g pane-active-border-fg blue 

# all panes
set -g pane-border-fg blue 

# higlight window in red (like screen)
set-window-option -g window-status-current-bg red

#CPU MEM
#https://github.com/thewtex/tmux-mem-cpu-load
set -g status-interval 1
set -g status-right "#(tmux-mem-cpu-load --colors 1 20)"

# Vim-like key bindings for pane navigation (default uses cursor keys)
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# mouse-select-pane [on | off]
# #   If on, tmux captures the mouse and when a window is
# #   split into multiple panes the mouse may be used to
# #   select the current pane.  The mouse click is also
# #   passed through to the application as normal.
# #
#set -g mouse-select-pane on

# vi keybindings
set-window-option -g mode-keys vi
